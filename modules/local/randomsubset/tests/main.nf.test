nextflow_process {

    name "Test Process RANDOMSUBSET"
    script "../main.nf"
    process "RANDOMSUBSET"

    tag "modules"
    tag "modules_"
    tag "randomsubset"

    test("sarscov2 - [vcf, tbi]") {

        when {
            process {
                """
                // The input VCF has 9 records so we expect 4 records in the output VCF
                input[0] = [
                    [ id:'out', single_end:false ], // meta map
                    file('https://github.com/nf-core/test-datasets/raw/refs/heads/modules/data/genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true),
                    file('https://github.com/nf-core/test-datasets/raw/refs/heads/modules/data/genomics/sarscov2/illumina/vcf/test.vcf.gz.tbi', checkIfExists: true)
                ]
                input[1] = 0.5
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    path(process.out.vcf.get(0).get(1)).vcf.summary,
                    file(process.out.tbi.get(0).get(1)).name,
                    process.out.versions
                ).match() },
            )
        }

    }

    test("sarscov2 - [vcf, tbi] - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'out', single_end:false ], // meta map
                    file('https://github.com/nf-core/test-datasets/raw/refs/heads/modules/data/genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true),
                    file('https://github.com/nf-core/test-datasets/raw/refs/heads/modules/data/genomics/sarscov2/illumina/vcf/test.vcf.gz.tbi', checkIfExists: true)
                ]
                input[1] = 0.00175
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }

    }
}

